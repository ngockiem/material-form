{"version":3,"sources":["components/Form.js","components/Table.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","validate","resultCheck","state","firstName","length","setState","firstNameError","lastName","lastNameError","email","indexOf","emailError","password","passwordError","rePassword","rePasswordError","handleChange","bind","handleSubmit","event","this","target","name","value","e","preventDefault","onChange","Box","m","mt","p","width","Typography","mb","variant","autoComplete","onSubmit","TextField","error","helperText","id","label","fullWidth","margin","type","Button","color","Component","useStyles","makeStyles","table","minWidth","DenseTable","tableDetails","header","classes","TableContainer","component","Paper","Table","className","size","aria-label","TableHead","TableRow","map","TableCell","TableBody","detail","key","row","index","head","hindex","prop","App","data","onSubmitForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.60a0bc35.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Typography, Box, TextField, Button } from '@material-ui/core';\r\n\r\n\r\nexport default class Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: '',\r\n            firstNameError: '',\r\n            lastName: '',\r\n            lastNameError: '',\r\n            email: '',\r\n            emailError: '',\r\n            password: '',\r\n            passwordError: '',\r\n            rePassword: '',\r\n            rePasswordError: ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n        \r\n    }\r\n\r\n    validate = () => {\r\n        let resultCheck = false;\r\n        if (this.state.firstName.length < 5) {\r\n            resultCheck = true;\r\n            this.setState({\r\n                firstNameError: 'First Name need atleast 5 characters'\r\n            });\r\n        }else{\r\n            this.setState({\r\n                firstNameError: ''\r\n            });\r\n        }\r\n        if (this.state.lastName.length < 5) {\r\n            resultCheck = true;\r\n            this.setState({\r\n                lastNameError: 'last Name need atleast 5 characters'\r\n            });\r\n        }else{\r\n            this.setState({\r\n                lastNameError: ''\r\n            });\r\n        }\r\n        if (this.state.email.indexOf('@') === -1) {\r\n            resultCheck = true;\r\n            this.setState({\r\n                emailError: 'Email need contain @ character'\r\n            });\r\n        }else{\r\n            this.setState({\r\n                emailError: ''\r\n            });\r\n        }\r\n        if (this.state.password === '') {\r\n            resultCheck = true;\r\n            this.setState({\r\n                passwordError: `password can't be blank`\r\n            });\r\n        }else{\r\n            this.setState({\r\n                passwordError: ''\r\n            });\r\n        }\r\n        if (this.state.rePassword !== this.state.password) {\r\n            resultCheck = true;\r\n            this.setState({\r\n                rePasswordError: `password and retype password not match`\r\n            });\r\n        }else{\r\n            this.setState({\r\n                rePasswordError: ''\r\n            });\r\n        }\r\n        return resultCheck;\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        const err = this.validate();\r\n        if (!err) {\r\n            this.props.onChange(this.state);\r\n            this.setState(() => ({\r\n                firstName: '',\r\n                firstNameError: '',\r\n                lastName: '',\r\n                lastNameError: '',\r\n                email: '',\r\n                emailError: '',\r\n                password: '',\r\n                passwordError: '',\r\n                rePassword: '',\r\n                rePasswordError: ''\r\n            }));\r\n        }\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box m=\"auto\" mt={2} p={3} width={500}>\r\n                <Typography mb={2} variant=\"h5\">\r\n                    Form Material\r\n                </Typography>\r\n                <form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        error={this.state.firstNameError ? true : false}\r\n                        helperText={this.state.firstNameError ? this.state.firstNameError : ''}\r\n                        name=\"firstName\"\r\n                        id=\"first-name\"\r\n                        label=\"First Name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        value={this.state.firstName}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <TextField\r\n                        error={this.state.lastNameError ? true : false}\r\n                        helperText={this.state.lastNameError ? this.state.lastNameError : ''}\r\n                        name=\"lastName\"\r\n                        id=\"last-name\"\r\n                        label=\"last Name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        value={this.state.lastName}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <TextField\r\n                        error={this.state.emailError ? true : false}\r\n                        helperText={this.state.emailError ? this.state.emailError : ''}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        label=\"email\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        margin=\"normal\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <TextField\r\n                        error={this.state.passwordError ? true : false}\r\n                        helperText={this.state.passwordError ? this.state.passwordError : ''}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        label=\"password\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        type=\"password\"\r\n                        margin=\"normal\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <TextField\r\n                        error={this.state.rePasswordError ? true : false}\r\n                        helperText={this.state.rePasswordError ? this.state.rePasswordError : ''}\r\n                        name=\"rePassword\"\r\n                        id=\"re-password\"\r\n                        label=\"Retype password\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        type=\"password\"\r\n                        margin=\"normal\"\r\n                        value={this.state.rePassword}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n                        Send\r\n                    </Button>\r\n                </form>\r\n            </Box>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nexport default function DenseTable({ tableDetails, header }) {\r\n  const classes = useStyles();\r\n\r\n  const renderRow = (row, index, head) => {    \r\n      return <TableRow key={index}>\r\n        { \r\n          head.map((key ,hindex)=>\r\n          <TableCell key={hindex}>{row[key.prop]}</TableCell>\r\n          )\r\n        }\r\n      </TableRow>    \r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            {\r\n              header.map((value) => (\r\n                <TableCell>{value.name}</TableCell>\r\n              ))\r\n            }\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {\r\n            tableDetails.map((detail, key) => \r\n              renderRow(detail, key, header)\r\n            )\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'typeface-roboto';\n\nimport Form from './components/Form';\nimport Table from './components/Table';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      data: ''\n    }\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n  }\n\n  onSubmitForm(data){\n    this.setState({\n      ...this.state.data,\n      data\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Form onChange={this.onSubmitForm}/>\n        <Table \n          tableDetails={[this.state.data]} \n          header={[\n            {\n              name: \"First Name\",\n              prop: \"firstName\"\n            },\n            {\n              name: \"Last Name\",\n              prop: \"lastName\"\n            },\n            {\n              name: \"Email\",\n              prop: \"email\"\n            },\n            {\n              name: \"Password\",\n              prop: \"password\"\n            }\n          ]}\n        />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}